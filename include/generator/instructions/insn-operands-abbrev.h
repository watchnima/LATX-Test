#ifndef TEST_INSN_OPERANDS_ABBREV_H
#define TEST_INSN_OPERANDS_ABBREV_H

/* push/pop reg */
typedef enum {
  LATXT_PP_REG_ES,
  LATXT_PP_REG_SS,
  LATXT_PP_REG_rAX,
  LATXT_PP_REG_rCX,
  LATXT_PP_REG_rDX,
  LATXT_PP_REG_rBX,
  LATXT_PP_REG_rSP,
  LATXT_PP_REG_rBP,
  LATXT_PP_REG_rSI,
  LATXT_PP_REG_rDI,
  LATXT_PP_REG_LAST
} LATXT_PP_REG;

/* jump type */
typedef enum {
  LATXT_JUMP_TYPE_NONE,
  LATXT_JUMP_TYPE_SHORT,
  LATXT_JUMP_TYPE_NEAR,
  LATXT_JUMP_TYPE_FAR,
  LATXT_JUMP_TYPE_LAST
} LATXT_JUMP_TYPE;

/* jump condition */
typedef enum {
  LATXT_JUMP_CONDITION_O,
  LATXT_JUMP_CONDITION_NO,
  LATXT_JUMP_CONDITION_B_NAE_C,
  LATXT_JUMP_CONDITION_NB_AE_NC,
  LATXT_JUMP_CONDITION_Z_E,
  LATXT_JUMP_CONDITION_NZ_NE,
  LATXT_JUMP_CONDITION_BE_NA,
  LATXT_JUMP_CONDITION_NBE_A,
  LATXT_JUMP_CONDITION_S,
  LATXT_JUMP_CONDITION_NS,
  LATXT_JUMP_CONDITION_P_PE,
  LATXT_JUMP_CONDITION_NP_PO,
  LATXT_JUMP_CONDITION_L_NGE,
  LATXT_JUMP_CONDITION_NL_GE,
  LATXT_JUMP_CONDITION_LE_NG,
  LATXT_JUMP_CONDITION_NLE_G
} LATXT_JUMP_CONDITION;

/* operands type abbreviation */
typedef enum {
  LATXT_OPERANDS_ABBREV_INVALID,

  LATXT_OPERANDS_ABBREV_Eb_Gb,
  LATXT_OPERANDS_ABBREV_Ev_Gv,
  LATXT_OPERANDS_ABBREV_Gb_Eb,
  LATXT_OPERANDS_ABBREV_Gv_Ev,
  LATXT_OPERANDS_ABBREV_AL_Ib,
  LATXT_OPERANDS_ABBREV_rAX_Iz,

  LATXT_OPERANDS_ABBREV_Eb_Ib,
  LATXT_OPERANDS_ABBREV_Ev_Iz,
  LATXT_OPERANDS_ABBREV_Eb_Ibi64,
  LATXT_OPERANDS_ABBREV_Ev_Ib,

  LATXT_OPERANDS_ABBREV_LAST
} LATXT_OPERANDS_ABBREV;

#endif
